# -*- coding: utf-8 -*-
"""[6_2] pfhedge.nn.functional

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ls1OoUheEg_CnqKTKNVGcjcACbIWSIjl
"""

import torch
from torch import Tensor

from torch.distributions.normal import Normal
from torch.distributions.utils import broadcast_all

Normal(0.0, 1.0).cdf(0.1)

a = torch.tensor([-1.0, 0.0, 10.0])

a

Normal(0.0, 1.0).cdf(a)

Normal(0.0, 1.0).log_prob(a)

Normal(0.0, 1.0).log_prob(a).exp()



"""### $$d_1$$

$$d_1 = \frac{\ln \left( \frac{S_t}{K}\right) + (r + \frac{1}{2} \sigma^2) \sqrt{T-t}}{\sigma \sqrt{T-t}}$$

```
s, t, v = broadcast_all(log_moneyness, time_to_maturity, volatility)
if not (t >= 0).all():
    raise ValueError("all elements in time_to_maturity have to be non-negative")
if not (v >= 0).all():
    raise ValueError("all elements in volatility have to be non-negative")
variance = v * t.sqrt()
output = s / variance + variance / 2
# TODO(simaki): Replace zeros_like with 0.0 once https://github.com/pytorch/pytorch/pull/62084 is merged
return output.where((s != 0).logical_or(variance != 0), torch.zeros_like(output))
```
"""

