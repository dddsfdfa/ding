# -*- coding: utf-8 -*-
"""[5_1] pfhedge_study

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17tyQWURTtqTkCi_r9jNBIbMCOOvtyzIi
"""

!pip install pfhedge

import torch

"""### Starting example"""

from pfhedge.instruments import BrownianStock
from pfhedge.instruments import EuropeanOption

stock = BrownianStock(cost=0.0001)
derivative = EuropeanOption(stock)

derivative

"""### MLP"""

from pfhedge.nn import Hedger
from pfhedge.nn import MultiLayerPerceptron

model = MultiLayerPerceptron()
hedger = Hedger(model, inputs=["log_moneyness", "expiry_time", "volatility", "prev_hedge"])

hedger

_ = hedger.fit(derivative, n_epochs=200)

price = hedger.price(derivative)
price

"""### Black-Scholes Model"""

from pfhedge.nn import BlackScholes
from pfhedge.nn import Hedger

derivative = EuropeanOption(BrownianStock(cost=1e-4))

model = BlackScholes(derivative)
hedger = Hedger(model, inputs=model.inputs())

price = hedger.price(derivative)
price

"""### Black-Scholes European Options"""

from pfhedge.nn import BSEuropeanOption

model = BSEuropeanOption()

model.inputs()

input = torch.tensor([
    [-0.01, 0.1, 0.2],
    [0.0, 0.08, 0.2],
    [0.01, 0.1, 0.2],
])

model(input)

model(input)

