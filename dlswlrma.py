# -*- coding: utf-8 -*-
"""인공지능과금융공학

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12hZ1lzTTZ623U7piNIJojTLbRjq125BK
"""

!git clone https://github.com/pfnet-research/pfhedge.git

import os

result = []
for root, _, files in os.walk("pfhedge/pfhedge"):
    for file in files:
        full_path = os.path.join(root, file)
        result.append(full_path)

# len(result)
result

import ast

def analyze_python_file(file_path):
    with open(file_path, "r", encoding="utf-8") as f:
        code = f.read()
    tree = ast.parse(code, filename=file_path)

    print(f"📄 Analyzing: {file_path}")

    for node in tree.body:
        # Top-level imports
        if isinstance(node, ast.Import):
            for alias in node.names:
                #print(f"📦 Import: {alias.name}")
                pass
        elif isinstance(node, ast.ImportFrom):
            for alias in node.names:
                #print(f"📦 From {node.module} import {alias.name}")
                pass

        # Top-level functions
        elif isinstance(node, ast.FunctionDef):
            print(f"🔧 Function: {node.name}()")

        # Classes and their methods
        elif isinstance(node, ast.ClassDef):
            print(f"🏷️  Class: {node.name}")
            for item in node.body:
                if isinstance(item, ast.FunctionDef):
                    print(f"   └── 🧩 Method: {item.name}()")

    print()


for i in result:
    analyze_python_file(i)

